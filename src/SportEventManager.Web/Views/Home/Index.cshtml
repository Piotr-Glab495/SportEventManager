@using SportEventManager.Web.ViewModels.EventModel;
@model IEnumerable<EventViewModel>
@{
    ViewData["Title"] = "Home Page";
}

<style>
    /* Create four equal columns that floats next to eachother */
    .column {
        float: left;
        width: 30%;
        margin-left: 15px;
    }

    .match {
        transition: 0.3s;
        border: 1px solid #AAA;
        border-radius: 15px 15px 15px 15px;
    }

    .round {
        min-width: 300px;
        padding-left: 10px;
        font-size: 24px;
    }

        .round .date {
            display: inline;
            float: right;
            padding-left: 10px;
            margin-right: 10px;
            font-size: 18px;
        }

    .match:hover {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        background-color: rgba(0, 0, 0, 0.3);
        cursor: pointer;
    }

    .team {
        min-width: 100px;
        padding-left: 10px;
    }

        .team.top {
            border-radius: 15px 15px 0 0;
            font-size: 20px;
        }

        .team.bot {
            border-radius: 0 0 15px 15px;
            font-size: 20px;
        }

        .team .score {
            display: inline;
            float: right;
            padding-left: 10px;
            padding-right: 10px;
            font-size: 20px;
        }

    * {
        box-sizing: border-box;
    }

    .default {
        border-color: #e7e7e7;
        color: black;
    }

        .default:hover {
            background: #e7e7e7;
        }

</style>

@if(Model != null)
{
    @for (int i = 0; i < Model.Count<EventViewModel>() ; i++)
    {
        int currentId = Model.ElementAt<EventViewModel>(i).Id;
        <div class="column">
            <a class="nav-link" asp-controller="EventView" asp-action="Matches" asp-route-id="@currentId">
            <div class="match" id="matchDiv_@currentId">
                    <div class="round">
                        @Html.DisplayFor(modelItem => Model.ElementAt<EventViewModel>(i).Name)
                        <div class="date">
                            @Html.DisplayFor(modelItem => Model.ElementAt<EventViewModel>(i).startTime)
                        </div>
                    </div>
                    <div class="team top">
                        Number of teams
                        <div class="score">
                            @Html.DisplayFor(modelItem => Model.ElementAt<EventViewModel>(i).Teams.Count)
                        </div>
                    </div>
                    <div class="team top">
                        Number of Stadiums
                        <div class="score">
                            @Html.DisplayFor(modelItem => Model.ElementAt<EventViewModel>(i).Stadiums.Count)
                        </div>
                    </div>
                    <div class="team bot">
                        Number of Matches
                        <div class="score">
                            @Html.DisplayFor(modelItem => Model.ElementAt<EventViewModel>(i).Matches.Count)
                        </div>
                    </div>
                </div>
            </a>
        </div>
    }
} else
{
  <h1>No events are available now</h1>  
}
